<?xml version='1.0'?>
<mavlink>
	<include>common.xml</include>
	<messages>
		<!-- 15x messages are actuator related -->
		<message id="150" name="RUDDER_RAW">
				<description>This message encodes all of the raw rudder sensor data from the USV.</description>
				<field type="uint16_t" name="raw_position">The raw data from the position sensor, generally a potentiometer.</field>
				<field type="uint8_t" name="port_limit">Status of the rudder limit sensor, port side. 0 indicates off and 1 indicates that the limit is hit. If this sensor is inactive set to 0xFF.</field>
				<field type="uint8_t" name="center_limit">Status of the rudder limit sensor, port side. 0 indicates off and 1 indicates that the limit is hit. If this sensor is inactive set to 0xFF.</field>
				<field type="uint8_t" name="starboard_limit">Status of the rudder limit sensor, starboard side. 0 indicates off and 1 indicates that the limit is hit. If this sensor is inactive set to 0xFF.</field>
				<field type="uint16_t" name="port_limit_val">Holds the raw value that indicates the port limit in ADC units. Used for mapping the raw ADC values into real units.</field>
				<field type="uint16_t" name="starboard_limit_val">Holds the raw value that indicates the starboard limit in ADC units. Used for mapping the raw ADC values into real units.</field>
		</message>
		<!-- 16x messages are environment/physical sensor related -->
		<message id="160" name="WSO100">
				<description>Returns the raw wind/air sensor values from the WSO100.</description>
				<field type="float" name="speed">Wind speed in m/s.</field>
				<field type="float" name="direction">Wind direction in rads east from north.</field>
				<field type="float" name="temperature">Air temperature in degrees Celsius.</field>
				<field type="float" name="pressure">Air pressure in Pascals.</field>
				<field type="float" name="humidity">Air humidity in %.</field>
		</message>
		<message id="161" name="DST800">
				<description>Water-related measurements from the DST800.</description>
				<field type="float" name="speed">Water speed in m/s.</field>
				<field type="float" name="temperature">Water temperature in degrees Celsius.</field>
				<field type="float" name="depth">Water depth in m (DST800 range is 100m). Invalid measurements are 0.0.</field>
		</message>
		<message id="162" name="REVO_GS">
				<description>Attitude measurements from the Revolution GS compass.</description>
				<field type="float" name="heading">Heading in degrees eastward from north</field>
				<field type="uint8_t" name="mag_status">Magnetometer status</field>
				<field type="float" name="pitch">Pitch angle in degrees.</field>
				<field type="uint8_t" name="pitch_status">Pitch status</field>
				<field type="float" name="roll">Roll angle in degrees.</field>
				<field type="uint8_t" name="roll_status">Roll status</field>
				<field type="float" name="dip">Dip angle in degrees.</field>
				<field type="uint16_t" name="mag_horiz_comp">Horizontal component of the earth's magnetic field.</field>
		</message>
		<!-- 17x messages are system/status messages -->
		<message id="170" name="STATUS_AND_ERRORS">
				<description>Status and error bits from operation. THIS FIELD HAS BEEN DEPRECATED. It's only still defined here to make it easy to process old MAVLink logs.</description>
				<field type="uint16_t" name="status">Status bitfield. Bits are active-high and ordered as: 0-ECAN_TX_err, 1-ECAN_RX_err, 2-hil_sensors_mode, 3-rc_disconnected, 4-rc_calibrated.</field>
				<field type="uint16_t" name="errors">Errors bitfield. Bits are active-high and ordered as: 0-reset/startup, 1-reset_hil_toggle, 2-reset_HIL_discon, 3-reset_GPS-discon, 4-reset_track, 5-reset_calibrating, 6-reset_uncalibrated, 7-reset_estop.</field>
		</message>
		<message id="171" name="BASIC_STATE">
				<description>This message holds all values of interest for a basic analysis of the autopilot performance.</description>
				<field type="float" name="commanded_rudder_angle">Commanded rudder angle in milliradians where positive indicates port-side.</field>
				<field type="float" name="rudder_angle">The interpreted rudder angle in radians.</field>
				<field type="int16_t" name="commanded_throttle">Commanded throttle speed in units of 1/1023*100% of max current and positive values propel the vehicle forward.</field>
				<field type="int16_t" name="prop_speed">Propeller speed, positive values mean the vessel will be propelled forward. Units are in RPM.</field>
				<field type="float" name="L2_north">North-coordinate of the L2 vector in mm.</field>
				<field type="float" name="L2_east">East-coordinate of the L2 vector in mm.</field>
		</message>
		<message id="172" name="MAIN_POWER">
				<description>Displays the voltage level and power draw of the main battery.</description>
				<field type="uint16_t" name="voltage">The current main battery rail voltage. In units of 0.01V.</field>
				<field type="uint16_t" name="current_draw">The current being drawn from the main battery bank. In units of 0.1A.</field>
		</message>
		<message id="173" name="NODE_STATUS">
				<description>Display the status information of every node in the network.</description>
				<field type="uint16_t" name="hil_status">Status bitfield for the HIL node. Consult HilNode.h for details.</field>
				<field type="uint16_t" name="hil_errors">Reset bitfield for the HIL node. Consult HilNode.h for details.</field>
				<field type="int8_t" name="hil_temp">The onboard temperature of the HIL node in units of degrees Celsius. INT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="hil_load">The onboard CPU load of the HIL node in units of 1%. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="hil_voltage">The onboard unregulated voltage of the HIL node in units of .1V. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint16_t" name="imu_status">Status bitfield for the imu node. Consult ImuNode.h for details.</field>
				<field type="uint16_t" name="imu_errors">Reset bitfield for the imu node. Consult ImutNode.h for details.</field>
				<field type="int8_t" name="imu_temp">The onboard temperature of the imu node in units of degrees Celsius. INT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="imu_load">The onboard CPU load of the imu node in units of 1%. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="imu_voltage">The onboard unregulated voltage of the IMU node in units of .1V. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint16_t" name="power_status">Status bitfield for the power node. Consult PowerNode.h for details.</field>
				<field type="uint16_t" name="power_errors">Reset bitfield for the power node. Consult PowerNode.h for details.</field>
				<field type="int8_t" name="power_temp">The onboard temperature of the power node in units of degrees Celsius. INT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="power_load">The onboard CPU load of the power node in units of 1%. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="power_voltage">The onboard unregulated voltage of the power node in units of .1V. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint16_t" name="primary_status">Status bitfield for the Primary Node. Consult PrimaryNode.h for details.</field>
				<field type="uint16_t" name="primary_errors">Reset bitfield for the Primary Node. Consult PrimaryNode.h for details.</field>
				<field type="int8_t" name="primary_temp">The onboard temperature of the primary node in units of degrees Celsius. INT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="primary_load">The onboard CPU load of the primary node in units of 1%. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="primary_voltage">The onboard unregulated voltage of the primary node in units of .1V. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint16_t" name="rc_status">Status bitfield for the RC node. Consult RcNode.h for details.</field>
				<field type="uint16_t" name="rc_errors">Reset bitfield for the RC node. Consult RcNode.h for details.</field>
				<field type="int8_t" name="rc_temp">The onboard temperature of the RC node in units of degrees Celsius. INT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="rc_load">The onboard CPU load of the RC node in units of 1%. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="rc_voltage">The onboard unregulated voltage of the RC node in units of .1V. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint16_t" name="rudder_status">Status bitfield for the rudder node. Consult RudderNode.h for details.</field>
				<field type="uint16_t" name="rudder_errors">Reset bitfield for the rudder node. Consult RudderNode.h for details.</field>
				<field type="int8_t" name="rudder_temp">The onboard temperature of the rudder node in units of degrees Celsius. INT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="rudder_load">The onboard CPU load of the rudder node in units of 1%. UINT8_MAX if unmeasured/invalid.</field>
				<field type="uint8_t" name="rudder_voltage">The onboard unregulated voltage of the rudder node in units of .1V. UINT8_MAX if unmeasured/invalid.</field>
		</message>
	</messages>
</mavlink>
